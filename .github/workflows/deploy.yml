name: Deploy Lambda API

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install Dependencies
        run: npm install
        # This ensures all dependencies, including serverless-offline, are installed locally

      - name: Authenticate with Serverless Framework
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        run: echo "Using Serverless Framework access key"

      - name: Verify Serverless Framework Version
        run: serverless --version

      - name: Validate Serverless Access Key
        run: |
          if [ -z "${{ secrets.SERVERLESS_ACCESS_KEY }}" ]; then
            echo "Error: SERVERLESS_ACCESS_KEY is not set."
            exit 1
          fi

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      - name: Validate AWS Credentials
        run: |
          aws sts get-caller-identity || { echo "Error: Invalid AWS credentials."; exit 1; }

      - name: Print Environment Variables
        run: env

      - name: Print Debug Information
        run: |
          echo "Serverless Configuration:"
          cat config/serverless.yml
          echo "Environment Variables:"
          env

      - name: Deploy Application
        run: npx serverless deploy --config config/serverless.yml --debug
        # Use npx to ensure the locally installed serverless framework and plugins are used
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
